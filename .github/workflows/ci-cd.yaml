name: Deploy Crecita

on:
  push:
    branches: [main]

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      public_ip: ${{ steps.export_ip.outputs.public_ip }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ap-south-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - id: tf_apply
        name: Terraform Init & Apply
        run: |
          cd terraform-setup/stack
          terraform init
          terraform apply -auto-approve

      - id: export_ip
        name: Export public_ip
        if: ${{ steps.tf_apply.outcome == 'success' }}
        run: |
          cd terraform-setup/stack

          # grab only the first (and only) line of the output
          ip=$(terraform output -raw public_ip 2>/dev/null | head -n1)

          # overwrite GITHUB_OUTPUT with exactly one valid line (with newline!)
          printf 'public_ip=%s\n' "$ip" > "$GITHUB_OUTPUT"

      - name: Dump GITHUB_OUTPUT
        if: ${{ always() }}
        run: |
          echo "--- GITHUB_OUTPUT contents ---"
          cat "$GITHUB_OUTPUT"



  ansible:
    needs: terraform
    if: ${{ needs.terraform.result == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (for AWS modules, if needed)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ap-south-1

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Build Ansible inventory
        run: |
          echo "[app]" > hosts.ini
          echo "ec2-nodejs ansible_host=${{ needs.terraform.outputs.public_ip }} ansible_user=ubuntu" >> hosts.ini

      - name: Show generated hosts.ini
        run: cat hosts.ini

      - name: Run Playbook
        run: ansible-playbook -i hosts.ini ansible/playbook.yaml --private-key ~/.ssh/id_rsa
